@namespace FrontendBlazor.Client.Pages.Components

@rendermode InteractiveServer

@using FrontendBlazor.Client.Models
@using FrontendBlazor.Client.Services

@inject IEmployeesService employeeService

<div class="btn btn-danger" @onclick="OnShowModalClick">
	<Icon Name="IconName.Trash" /> Remove employee
</div>

<Modal @ref="modal" Title="Remove employee" ShowCloseButton="true">
	<BodyTemplate>
		<label>Employee name</label>
		<InputSelect class="form-control" TValue="int" @bind-Value="SelectedEmployee">
			@foreach (var employ in employees)
			{
				<option value="@employ.Id">@employ.Name</option>
			}
		</InputSelect>
	</BodyTemplate>
	<FooterTemplate>
		<Button Color="ButtonColor.Primary" @onclick="Delete">Remove</Button>
		<Button Color="ButtonColor.Secondary" @onclick="OnHideModalClick">Close</Button>
	</FooterTemplate>
</Modal>
@code {
	private Modal modal = new();

	[Parameter]
	public EventCallback UpdateData { get; set; }

	private int SelectedEmployee { get; set; }
	private List<Employee> employees = new();
	private async Task Delete()
	{
		var employee = employees?.FirstOrDefault(e => e.Id == SelectedEmployee);
		if (employee is null) return;
		await employeeService.Remove(employee);
		await OnHideModalClick();
		await UpdateData.InvokeAsync();
	}
	private async Task OnShowModalClick()
	{
		employees = (await employeeService.GetAll()).ToList();
		await modal.ShowAsync();
	}
	private async Task OnHideModalClick()
	{
		await modal.HideAsync();
	}
}